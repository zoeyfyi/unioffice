//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package vmldrawing ;import (_c "encoding/xml";_e "fmt";_f "github.com/unidoc/unioffice";_b "github.com/unidoc/unioffice/schema/soo/ofc/sharedTypes";_ff "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/office/excel";_a "github.com/unidoc/unioffice/schema/urn/schemas_microsoft_com/vml";);

// NewCommentDrawing constructs a new comment drawing.
func NewCommentDrawing ()*Container {_gb :=NewContainer ();_gb .Layout =_a .NewOfcShapelayout ();_gb .Layout .ExtAttr =_a .ST_ExtEdit ;_gb .Layout .Idmap =_a .NewOfcCT_IdMap ();_gb .Layout .Idmap .DataAttr =_f .String ("\u0031");_gb .Layout .Idmap .ExtAttr =_a .ST_ExtEdit ;_gb .ShapeType =_a .NewShapetype ();_gb .ShapeType .IdAttr =_f .String ("_\u0078\u0030\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_gb .ShapeType .CoordsizeAttr =_f .String ("2\u0031\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030");_gb .ShapeType .SptAttr =_f .Float32 (202);_gb .ShapeType .PathAttr =_f .String ("\u006d\u0030\u002c0l\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u00321\u00360\u0030,\u00321\u0036\u0030\u0030\u002c\u0032\u0031\u0036\u0030\u0030\u002c\u0030\u0078\u0065");_gf :=_a .NewEG_ShapeElements ();_gb .ShapeType .EG_ShapeElements =append (_gb .ShapeType .EG_ShapeElements ,_gf );_gf .Path =_a .NewPath ();_gf .Path .GradientshapeokAttr =_b .ST_TrueFalseT ;_gf .Path .ConnecttypeAttr =_a .OfcST_ConnectTypeRect ;return _gb ;};type Container struct{Layout *_a .OfcShapelayout ;ShapeType *_a .Shapetype ;Shape []*_a .Shape ;};func (_ffd *Container )MarshalXML (e *_c .Encoder ,start _c .StartElement )error {start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0076"},Value :"\u0075\u0072n\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d:v\u006d\u006c"});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u006f"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006di\u0063\u0072\u006f\u0073\u006f\u0066t\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u006ff\u0066\u0069\u0063\u0065"});start .Attr =append (start .Attr ,_c .Attr {Name :_c .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068\u0065\u006d\u0061\u0073\u002d\u006d\u0069\u0063\u0072\u006f\u0073\u006f\u0066\u0074\u002d\u0063\u006fm\u003a\u006f\u0066\u0066\u0069c\u0065\u003ae\u0078\u0063\u0065\u006c"});start .Name .Local ="\u0078\u006d\u006c";e .EncodeToken (start );if _ffd .Layout !=nil {_df :=_c .StartElement {Name :_c .Name {Local :"\u006f\u003a\u0073\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074"}};e .EncodeElement (_ffd .Layout ,_df );};if _ffd .ShapeType !=nil {_dd :=_c .StartElement {Name :_c .Name {Local :"v\u003a\u0073\u0068\u0061\u0070\u0065\u0074\u0079\u0070\u0065"}};e .EncodeElement (_ffd .ShapeType ,_dd );};for _ ,_gfe :=range _ffd .Shape {_ea :=_c .StartElement {Name :_c .Name {Local :"\u0076:\u0073\u0068\u0061\u0070\u0065"}};e .EncodeElement (_gfe ,_ea );};return e .EncodeToken (_c .EndElement {Name :start .Name });};func NewContainer ()*Container {return &Container {}};

// NewCommentShape creates a new comment shape for a given cell index.  The
// indices here are zero based.
func NewCommentShape (col ,row int64 )*_a .Shape {_d :=_a .NewShape ();_d .IdAttr =_f .String (_e .Sprintf ("\u0063\u0073\u005f\u0025\u0064\u005f\u0025\u0064",col ,row ));_d .TypeAttr =_f .String ("\u0023\u005f\u00780\u0030\u0030\u0030\u005f\u0074\u0032\u0030\u0032");_d .StyleAttr =_f .String ("\u0070\u006f\u0073i\u0074\u0069\u006f\u006e\u003a\u0061\u0062\u0073\u006f\u006cu\u0074\u0065\u003b\u006d\u0061\u0072\u0067\u0069\u006e\u002d\u006c\u0065\u0066\u0074:\u0038\u0030\u0070\u0074;\u006d\u0061\u0072\u0067\u0069n-\u0074o\u0070\u003a\u0032pt\u003b\u0077\u0069\u0064\u0074\u0068\u003a1\u0030\u0034\u0070\u0074\u003b\u0068\u0065\u0069\u0067\u0068\u0074\u003a\u0037\u0036\u0070\u0074\u003b\u007a\u002d\u0069\u006e\u0064\u0065x\u003a\u0031\u003bv\u0069\u0073\u0069\u0062\u0069\u006c\u0069t\u0079\u003a\u0068\u0069\u0064\u0064\u0065\u006e");_d .FillcolorAttr =_f .String ("\u0023f\u0062\u0066\u0036\u0064\u0036");_d .StrokecolorAttr =_f .String ("\u0023e\u0064\u0065\u0061\u0061\u0031");_cf :=_a .NewEG_ShapeElements ();_cf .Fill =_a .NewFill ();_cf .Fill .Color2Attr =_f .String ("\u0023f\u0062\u0066\u0065\u0038\u0032");_cf .Fill .AngleAttr =_f .Float64 (-180);_cf .Fill .TypeAttr =_a .ST_FillTypeGradient ;_cf .Fill .Fill =_a .NewOfcFill ();_cf .Fill .Fill .ExtAttr =_a .ST_ExtView ;_cf .Fill .Fill .TypeAttr =_a .OfcST_FillTypeGradientUnscaled ;_d .EG_ShapeElements =append (_d .EG_ShapeElements ,_cf );_cg :=_a .NewEG_ShapeElements ();_cg .Shadow =_a .NewShadow ();_cg .Shadow .OnAttr =_b .ST_TrueFalseT ;_cg .Shadow .ObscuredAttr =_b .ST_TrueFalseT ;_d .EG_ShapeElements =append (_d .EG_ShapeElements ,_cg );_ad :=_a .NewEG_ShapeElements ();_ad .Path =_a .NewPath ();_ad .Path .ConnecttypeAttr =_a .OfcST_ConnectTypeNone ;_d .EG_ShapeElements =append (_d .EG_ShapeElements ,_ad );_cfc :=_a .NewEG_ShapeElements ();_cfc .Textbox =_a .NewTextbox ();_cfc .Textbox .StyleAttr =_f .String ("\u006d\u0073\u006f\u002ddi\u0072\u0065\u0063\u0074\u0069\u006f\u006e\u002d\u0061\u006c\u0074\u003a\u0061\u0075t\u006f");_d .EG_ShapeElements =append (_d .EG_ShapeElements ,_cfc );_de :=_a .NewEG_ShapeElements ();_de .ClientData =_ff .NewClientData ();_de .ClientData .ObjectTypeAttr =_ff .ST_ObjectTypeNote ;_de .ClientData .MoveWithCells =_b .ST_TrueFalseBlankT ;_de .ClientData .SizeWithCells =_b .ST_TrueFalseBlankT ;_de .ClientData .Anchor =_f .String ("\u0031,\u0020\u0031\u0035\u002c\u0020\u0030\u002c\u0020\u0032\u002c\u00202\u002c\u0020\u0035\u0034\u002c\u0020\u0035\u002c\u0020\u0033");_de .ClientData .AutoFill =_b .ST_TrueFalseBlankFalse ;_de .ClientData .Row =_f .Int64 (row );_de .ClientData .Column =_f .Int64 (col );_d .EG_ShapeElements =append (_d .EG_ShapeElements ,_de );return _d ;};func (_bb *Container )UnmarshalXML (d *_c .Decoder ,start _c .StartElement )error {_bb .Shape =nil ;_ca :for {_gg ,_fc :=d .Token ();if _fc !=nil {return _fc ;};switch _ae :=_gg .(type ){case _c .StartElement :switch _ae .Name .Local {case "s\u0068\u0061\u0070\u0065\u006c\u0061\u0079\u006f\u0075\u0074":_bb .Layout =_a .NewOfcShapelayout ();if _ed :=d .DecodeElement (_bb .Layout ,&_ae );_ed !=nil {return _ed ;};case "\u0073h\u0061\u0070\u0065\u0074\u0079\u0070e":_bb .ShapeType =_a .NewShapetype ();if _fg :=d .DecodeElement (_bb .ShapeType ,&_ae );_fg !=nil {return _fg ;};case "\u0073\u0068\u0061p\u0065":_cfd :=_a .NewShape ();if _ebd :=d .DecodeElement (_cfd ,&_ae );_ebd !=nil {return _ebd ;};_bb .Shape =append (_bb .Shape ,_cfd );};case _c .EndElement :break _ca ;};};return nil ;};