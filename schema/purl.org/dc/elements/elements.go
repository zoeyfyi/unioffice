//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package elements ;import (_d "encoding/xml";_bg "fmt";_g "github.com/unidoc/unioffice";);

// Validate validates the ElementContainer and its children
func (_aad *ElementContainer )Validate ()error {return _aad .ValidateWithPath ("\u0045\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072");};func (_c *Any )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_c .SimpleLiteral =*NewSimpleLiteral ();for {_ca ,_fg :=d .Token ();if _fg !=nil {return _bg .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0041\u006e\u0079\u003a\u0020\u0025\u0073",_fg );};if _a ,_db :=_ca .(_d .EndElement );_db &&_a .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Any and its children, prefixing error messages with path
func (_bd *Any )ValidateWithPath (path string )error {if _aa :=_bd .SimpleLiteral .ValidateWithPath (path );_aa !=nil {return _aa ;};return nil ;};

// Validate validates the ElementsGroupChoice and its children
func (_fe *ElementsGroupChoice )Validate ()error {return _fe .ValidateWithPath ("\u0045\u006c\u0065\u006den\u0074\u0073\u0047\u0072\u006f\u0075\u0070\u0043\u0068\u006f\u0069\u0063\u0065");};func (_gg *Any )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {return _gg .SimpleLiteral .MarshalXML (e ,start );};func (_cedg *SimpleLiteral )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {for {_ded ,_df :=d .Token ();if _df !=nil {return _bg .Errorf ("\u0070a\u0072\u0073\u0069\u006eg\u0020\u0053\u0069\u006d\u0070l\u0065L\u0069t\u0065\u0072\u0061\u006c\u003a\u0020\u0025s",_df );};if _dg ,_be :=_ded .(_d .EndElement );_be &&_dg .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the ElementsGroup and its children, prefixing error messages with path
func (_ec *ElementsGroup )ValidateWithPath (path string )error {for _cbbf ,_dd :=range _ec .Choice {if _ad :=_dd .ValidateWithPath (_bg .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_cbbf ));_ad !=nil {return _ad ;};};return nil ;};type ElementsGroupChoice struct{Any []*Any ;};func NewElementContainer ()*ElementContainer {_cbb :=&ElementContainer {};return _cbb };func (_cea *SimpleLiteral )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {e .EncodeToken (start );e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};func NewAny ()*Any {_f :=&Any {};_f .SimpleLiteral =*NewSimpleLiteral ();return _f };

// ValidateWithPath validates the ElementContainer and its children, prefixing error messages with path
func (_gd *ElementContainer )ValidateWithPath (path string )error {for _aadg ,_ggg :=range _gd .Choice {if _ea :=_ggg .ValidateWithPath (_bg .Sprintf ("\u0025\u0073\u002f\u0043\u0068\u006f\u0069\u0063\u0065\u005b\u0025\u0064\u005d",path ,_aadg ));_ea !=nil {return _ea ;};};return nil ;};func NewElementsGroup ()*ElementsGroup {_da :=&ElementsGroup {};return _da };type ElementContainer struct{Choice []*ElementsGroupChoice ;};func (_e *ElementContainer )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {start .Name .Local ="\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072";e .EncodeToken (start );if _e .Choice !=nil {for _ ,_cf :=range _e .Choice {_cf .MarshalXML (e ,_d .StartElement {});};};e .EncodeToken (_d .EndElement {Name :start .Name });return nil ;};

// Validate validates the ElementsGroup and its children
func (_agc *ElementsGroup )Validate ()error {return _agc .ValidateWithPath ("\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070");};func NewElementsGroupChoice ()*ElementsGroupChoice {_eeb :=&ElementsGroupChoice {};return _eeb };

// Validate validates the Any and its children
func (_cb *Any )Validate ()error {return _cb .ValidateWithPath ("\u0041\u006e\u0079")};type ElementsGroup struct{Choice []*ElementsGroupChoice ;};func (_bga *ElementsGroupChoice )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _bga .Any !=nil {_gdb :=_d .StartElement {Name :_d .Name {Local :"\u0064\u0063\u003a\u0061\u006e\u0079"}};for _ ,_cef :=range _bga .Any {e .EncodeElement (_cef ,_gdb );};};return nil ;};

// ValidateWithPath validates the ElementsGroupChoice and its children, prefixing error messages with path
func (_cfc *ElementsGroupChoice )ValidateWithPath (path string )error {for _dcb ,_ada :=range _cfc .Any {if _gf :=_ada .ValidateWithPath (_bg .Sprintf ("\u0025\u0073\u002f\u0041\u006e\u0079\u005b\u0025\u0064\u005d",path ,_dcb ));_gf !=nil {return _gf ;};};return nil ;};func (_bf *ElementsGroup )MarshalXML (e *_d .Encoder ,start _d .StartElement )error {if _bf .Choice !=nil {for _ ,_dea :=range _bf .Choice {_dea .MarshalXML (e ,_d .StartElement {});};};return nil ;};func (_gc *ElementsGroupChoice )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_ced :for {_faa ,_ac :=d .Token ();if _ac !=nil {return _ac ;};switch _gace :=_faa .(type ){case _d .StartElement :switch _gace .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_eec :=NewAny ();if _fd :=d .DecodeElement (_eec ,&_gace );_fd !=nil {return _fd ;};_gc .Any =append (_gc .Any ,_eec );default:_g .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070o\u0072\u0074\u0065\u0064\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020o\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072ou\u0070\u0043\u0068\u006f\u0069\u0063\u0065\u0020\u0025\u0076",_gace .Name );if _cedc :=d .Skip ();_cedc !=nil {return _cedc ;};};case _d .EndElement :break _ced ;case _d .CharData :};};return nil ;};func NewSimpleLiteral ()*SimpleLiteral {_ef :=&SimpleLiteral {};return _ef };func (_fc *ElementContainer )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_cab :for {_gac ,_fgd :=d .Token ();if _fgd !=nil {return _fgd ;};switch _bgd :=_gac .(type ){case _d .StartElement :switch _bgd .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_de :=NewElementsGroupChoice ();if _cd :=d .DecodeElement (&_de .Any ,&_bgd );_cd !=nil {return _cd ;};_fc .Choice =append (_fc .Choice ,_de );default:_g .Log ("\u0073\u006b\u0069\u0070\u0070i\u006e\u0067\u0020\u0075\u006e\u0073\u0075\u0070\u0070\u006f\u0072\u0074\u0065d\u0020\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006d\u0065\u006e\u0074\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072\u0020\u0025v",_bgd .Name );if _gb :=d .Skip ();_gb !=nil {return _gb ;};};case _d .EndElement :break _cab ;case _d .CharData :};};return nil ;};

// ValidateWithPath validates the SimpleLiteral and its children, prefixing error messages with path
func (_efb *SimpleLiteral )ValidateWithPath (path string )error {return nil };func (_ce *ElementsGroup )UnmarshalXML (d *_d .Decoder ,start _d .StartElement )error {_gdf :for {_fa ,_dc :=d .Token ();if _dc !=nil {return _dc ;};switch _ee :=_fa .(type ){case _d .StartElement :switch _ee .Name {case _d .Name {Space :"\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f",Local :"\u0061\u006e\u0079"}:_ab :=NewElementsGroupChoice ();if _gbe :=d .DecodeElement (&_ab .Any ,&_ee );_gbe !=nil {return _gbe ;};_ce .Choice =append (_ce .Choice ,_ab );default:_g .Log ("\u0073\u006b\u0069\u0070\u0070\u0069\u006e\u0067 \u0075\u006e\u0073up\u0070\u006f\u0072\u0074\u0065\u0064 \u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0020\u006f\u006e\u0020\u0045\u006c\u0065\u006de\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070 \u0025\u0076",_ee .Name );if _ag :=d .Skip ();_ag !=nil {return _ag ;};};case _d .EndElement :break _gdf ;case _d .CharData :};};return nil ;};type Any struct{SimpleLiteral };type SimpleLiteral struct{};

// Validate validates the SimpleLiteral and its children
func (_gbb *SimpleLiteral )Validate ()error {return _gbb .ValidateWithPath ("\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c");};func init (){_g .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0053\u0069\u006d\u0070\u006c\u0065\u004c\u0069\u0074\u0065\u0072\u0061\u006c",NewSimpleLiteral );_g .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006ce\u006d\u0065\u006et\u0043\u006f\u006e\u0074\u0061\u0069\u006e\u0065\u0072",NewElementContainer );_g .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0061\u006e\u0079",NewAny );_g .RegisterConstructor ("\u0068\u0074\u0074\u0070\u003a\u002f\u002f\u0070\u0075\u0072\u006c\u002e\u006f\u0072\u0067/\u0064c\u002f\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u002f\u0031\u002e\u0031\u002f","\u0065\u006c\u0065\u006d\u0065\u006e\u0074\u0073\u0047\u0072\u006f\u0075\u0070",NewElementsGroup );};