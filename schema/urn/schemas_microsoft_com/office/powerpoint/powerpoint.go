//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

package powerpoint ;import (_a "encoding/xml";_c "fmt";_f "github.com/unidoc/unioffice";);func (_ca *Iscomment )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0069s\u0063\u006f\u006d\u006d\u0065\u006et";return _ca .CT_Empty .MarshalXML (e ,start );};func (_e *CT_Empty )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the CT_Empty and its children, prefixing error messages with path
func (_eb *CT_Empty )ValidateWithPath (path string )error {return nil };func NewCT_Rel ()*CT_Rel {_bd :=&CT_Rel {};return _bd };func (_cee *Textdata )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_cee .CT_Rel =*NewCT_Rel ();for _ ,_aec :=range start .Attr {if _aec .Name .Local =="\u0069\u0064"{_fc ,_bbd :=_aec .Value ,error (nil );if _bbd !=nil {return _bbd ;};_cee .IdAttr =&_fc ;continue ;};};for {_gcg ,_eee :=d .Token ();if _eee !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0054\u0065\u0078t\u0064\u0061\u0074\u0061: \u0025\u0073",_eee );};if _ccc ,_ea :=_gcg .(_a .EndElement );_ea &&_ccc .Name ==start .Name {break ;};};return nil ;};func NewCT_Empty ()*CT_Empty {_b :=&CT_Empty {};return _b };

// ValidateWithPath validates the CT_Rel and its children, prefixing error messages with path
func (_ff *CT_Rel )ValidateWithPath (path string )error {return nil };func NewIscomment ()*Iscomment {_da :=&Iscomment {};_da .CT_Empty =*NewCT_Empty ();return _da };

// Validate validates the CT_Rel and its children
func (_ag *CT_Rel )Validate ()error {return _ag .ValidateWithPath ("\u0043\u0054\u005f\u0052\u0065\u006c");};func NewTextdata ()*Textdata {_gg :=&Textdata {};_gg .CT_Rel =*NewCT_Rel ();return _gg };

// Validate validates the Iscomment and its children
func (_ef *Iscomment )Validate ()error {return _ef .ValidateWithPath ("\u0049s\u0063\u006f\u006d\u006d\u0065\u006et");};

// Validate validates the Textdata and its children
func (_eba *Textdata )Validate ()error {return _eba .ValidateWithPath ("\u0054\u0065\u0078\u0074\u0064\u0061\u0074\u0061");};func (_ee *CT_Rel )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {if _ee .IdAttr !=nil {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0069\u0064"},Value :_c .Sprintf ("\u0025\u0076",*_ee .IdAttr )});};e .EncodeToken (start );e .EncodeToken (_a .EndElement {Name :start .Name });return nil ;};

// ValidateWithPath validates the Textdata and its children, prefixing error messages with path
func (_fd *Textdata )ValidateWithPath (path string )error {if _dg :=_fd .CT_Rel .ValidateWithPath (path );_dg !=nil {return _dg ;};return nil ;};func (_eg *CT_Empty )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for {_fa ,_d :=d .Token ();if _d !=nil {return _c .Errorf ("p\u0061r\u0073\u0069\u006e\u0067\u0020\u0043\u0054\u005fE\u006d\u0070\u0074\u0079: \u0025\u0073",_d );};if _af ,_ab :=_fa .(_a .EndElement );_ab &&_af .Name ==start .Name {break ;};};return nil ;};type CT_Empty struct{};func (_ae *CT_Rel )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {for _ ,_bfe :=range start .Attr {if _bfe .Name .Local =="\u0069\u0064"{_fbc ,_gc :=_bfe .Value ,error (nil );if _gc !=nil {return _gc ;};_ae .IdAttr =&_fbc ;continue ;};};for {_ed ,_bg :=d .Token ();if _bg !=nil {return _c .Errorf ("\u0070a\u0072s\u0069\u006e\u0067\u0020\u0043T\u005f\u0052e\u006c\u003a\u0020\u0025\u0073",_bg );};if _aa ,_cf :=_ed .(_a .EndElement );_cf &&_aa .Name ==start .Name {break ;};};return nil ;};

// ValidateWithPath validates the Iscomment and its children, prefixing error messages with path
func (_bb *Iscomment )ValidateWithPath (path string )error {if _be :=_bb .CT_Empty .ValidateWithPath (path );_be !=nil {return _be ;};return nil ;};func (_bfb *Iscomment )UnmarshalXML (d *_a .Decoder ,start _a .StartElement )error {_bfb .CT_Empty =*NewCT_Empty ();for {_aad ,_ba :=d .Token ();if _ba !=nil {return _c .Errorf ("p\u0061\u0072\u0073\u0069ng\u0020I\u0073\u0063\u006f\u006d\u006de\u006e\u0074\u003a\u0020\u0025\u0073",_ba );};if _df ,_cc :=_aad .(_a .EndElement );_cc &&_df .Name ==start .Name {break ;};};return nil ;};type Textdata struct{CT_Rel };

// Validate validates the CT_Empty and its children
func (_bf *CT_Empty )Validate ()error {return _bf .ValidateWithPath ("\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079");};type Iscomment struct{CT_Empty };type CT_Rel struct{IdAttr *string ;};func (_ce *Textdata )MarshalXML (e *_a .Encoder ,start _a .StartElement )error {start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078\u006d\u006cn\u0073"},Value :"\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074"});start .Attr =append (start .Attr ,_a .Attr {Name :_a .Name {Local :"\u0078m\u006c\u006e\u0073\u003a\u0078\u006dl"},Value :"\u0068\u0074tp\u003a\u002f\u002fw\u0077\u0077\u002e\u00773.o\u0072g/\u0058\u004d\u004c\u002f\u0031\u0039\u00398/\u006e\u0061\u006d\u0065\u0073\u0070\u0061c\u0065"});start .Name .Local ="\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061";return _ce .CT_Rel .MarshalXML (e ,start );};func init (){_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0045\u006d\u0070\u0074\u0079",NewCT_Empty );_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0043\u0054\u005f\u0052\u0065\u006c",NewCT_Rel );_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0069s\u0063\u006f\u006d\u006d\u0065\u006et",NewIscomment );_f .RegisterConstructor ("\u0075\u0072\u006e\u003a\u0073\u0063\u0068e\u006d\u0061\u0073-\u006d\u0069\u0063\u0072o\u0073\u006f\u0066\u0074\u002d\u0063\u006f\u006d\u003a\u006f\u0066\u0066\u0069\u0063\u0065\u003a\u0070\u006f\u0077\u0065\u0072\u0070\u006f\u0069\u006e\u0074","\u0074\u0065\u0078\u0074\u0064\u0061\u0074\u0061",NewTextdata );};