//
// Copyright 2020 FoxyUtils ehf. All rights reserved.
//
// This is a commercial product and requires a license to operate.
// A trial license can be obtained at https://unidoc.io
//
// DO NOT EDIT: generated by unitwist Go source code obfuscator.
//
// Use of this source code is governed by the UniDoc End User License Agreement
// terms that can be accessed at https://unidoc.io/eula/

// Package diskstore implements tempStorage interface
// by using disk as a storage
package diskstore ;import (_ce "github.com/unidoc/unioffice/common/tempstorage";_b "io/ioutil";_c "os";_f "strings";);

// Open opens file from disk according to a path
func (_e diskStorage )Open (path string )(_ce .File ,error ){return _c .Open (path )};type diskStorage struct{};

// SetAsStorage sets temp storage as a disk storage
func SetAsStorage (){_a :=diskStorage {};_ce .SetAsStorage (&_a )};

// TempFile creates a new temp directory by calling ioutil TempDir
func (_ec diskStorage )TempDir (pattern string )(string ,error ){return _b .TempDir ("",pattern )};

// Add is not applicable in the diskstore implementation
func (_cc diskStorage )Add (path string )error {return nil };

// RemoveAll removes all files in the directory
func (_fd diskStorage )RemoveAll (dir string )error {if _f .HasPrefix (dir ,_c .TempDir ()){return _c .RemoveAll (dir );};return nil ;};

// TempFile creates a new temp file by calling ioutil TempFile
func (_ae diskStorage )TempFile (dir ,pattern string )(_ce .File ,error ){return _b .TempFile (dir ,pattern );};